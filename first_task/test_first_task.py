"""This module contains tests for the first task"""

from first_task import caching_fibonacci
import pytest

@pytest.mark.timeout(1)
@pytest.mark.parametrize("cases", [
    [(10,55), (15, 610),(20,6765), (30,832040), (40,102334155), (50,12586269025)],
    [(0,0), (-1,0), (-10,0), (-20,0), (-30,0)],
    [(1,1), (2,1), (3,2), (4,3), (5,5)],
    [(100, 354224848179261915075),
     (200, 280571172992510140037611932413038677189525),
     (300, 222232244629420445529739893461909967206666939096499764990979600),
     (400, int("1760236806450139664682269453924112507703843833044921918867259928"
               "96575345044216019675")),
     (500, int("1394232245616978801397243828704072839500702565876973072641089629"
               "48325571622863290691557658876222521294125")),
     (600, int("1104330705729522423464322467677182859425902373575556063800088918"
               "75277701705731473925618404421867819924194229142447517901959200")),
     (700, int("8747081495575284620397841301757132734236724096769738107423043259"
               "2527501911290377655628227150878427331693193369109193672330777527"
               "943718169105124275")),
     (800, int("6928308186422471713629007768132851827339912438520482071896604059"
               "7691435587278383112277161967532530675374170857404743017623467220"
               "361778016172106855838975759985190398725")),
     (900, int("54877108839480000051413673948383714443800519309123592724494953427"
               "03981120106434123495438752152539061550494909218744121824667910473"
               "1442473022013980160407007017175697317900483275246652938800")),
     (1000, int("4346655768693745643568852767504062580256466051737178040248172908"
                "9536555417949051890403879840079255169295922593080322634775209689"
                "6232398733224711616429964409065331879382989696499285160037044761"
                "37795166849228875")),
     (1500, int("1355112566856310195163693686714840837778601071241849724213354315"
                "3221487310873528750612259354035717265300373778814347320257699257"
                "0823565500453499141029242495959974839822286992875272419318113250"
                "9509964244762124220020925443992019696046532143849830534589337893"
                "2585393381539093549479296194800838145996187122583354898000"))]
])
def test_first_task(cases: list[tuple[int, int]]):
    """Test for the first task."""
    fibonacci = caching_fibonacci()

    for n, expected in cases:
        assert fibonacci(n) == expected
